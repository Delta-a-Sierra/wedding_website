package sections

import "github.com/Delta-a-Sierra/wedding_website/internal/domain/entities"
import "github.com/Delta-a-Sierra/wedding_website/internal/adapters/presentation/htmx/templates/components"
import "fmt"

templ Registry(items []entities.RegistryItem, pages int, page int) {
	<section id="registry" class="py-20 px-10">
		<div class="flex flex-col gap-12 lg:gap-4 items-center">
			<h3 class="text-center text-5xl lg:text-2xl font-light text-off-grey font-italiana">Regisitry</h3>
			<h2 class="text-center font-italiana text-6xl lg:text-4xl">Too Our Happy Ever After</h2>
			<p class="lg:w-2/6 text-center leading-normal font-light text-3xl lg:text-xl text-grey-txt">
				Welcome to our registry. Your presence at our wedding is the greatest gift of all however if you would like to
				help
				us celebrate with a gift, we have curated a selection of items and experiences we would love.
			</p>
		</div>
		@RegistryItems(items, true, pages, page)
	</section>
}

templ RegistryItems(items []entities.RegistryItem, all bool, pages int, page int) {
	<div id="registry-items" class="w-full px-10 lg:px-50 py-8 gap-4 flex flex-col justify-center items-center">
		if all {
			<div class="w-3/4 lg:w-1/4">
				@components.SearchBar("/registry/search")
			</div>
		} else {
			<div class="w-3/4 lg:w-1/4">
				@components.SearchBar("/registry/search/not-purchased")
			</div>
		}
		if all {
			<div class="flex mb-8 gap-4 lg:gap-2 text-2xl lg:text-sm text-grey-txt">
				<button
					id="registry-filter-all"
					class="rounded p-4 lg:p-1 border-gray-300 border bg-primary text-white"
					hx-trigger="click"
					hx-target="#registry-items"
					hx-swap="outerHTML"
					hx-get={ fmt.Sprintf("/registry/all/page/%d",
      1) }
				>All</button>
				<button
					id="registry-filter-not_purchased"
					class="rounded p-4 lg:p-1 border-gray-300 border"
					hx-trigger="click"
					hx-target="#registry-items"
					hx-swap="outerHTML"
					hx-get={ fmt.Sprintf("/registry/not-purchased/page/%d", 1) }
				>
					Not
					Purchased
				</button>
			</div>
		} else {
			<div class="flex mb-8 gap-4 lg:gap-2 text-2xl lg:text-sm text-grey-txt">
				<button
					id="registry-filter-all"
					class="rounded p-4 lg:p-1 border-gray-300 border"
					hx-trigger="click"
					hx-target="#registry-items"
					hx-swap="outerHTML"
					hx-get={ fmt.Sprintf("/registry/all/page/%d", 1) }
				>All</button>
				<button
					id="registry-filter-not_purchased"
					class="rounded p-4 lg:p-1 border-gray-300 border bg-primary text-white"
					hx-trigger="click"
					hx-target="#registry-items"
					hx-swap="outerHTML"
					hx-get={ fmt.Sprintf("/registry/not-purchased/page/%d", 1) }
				>
					Not
					Purchased
				</button>
			</div>
		}
		if all {
			@RegistryItemGrid(items, pages, page, "/registry/all/page")
		} else {
			@RegistryItemGrid(items, pages, page, "/registry/not-purchased/page")
		}
	</div>
}

templ RegistryItemGrid(items []entities.RegistryItem, pages int, page int, urlPrefix string) {
	<div id="registry-content" class="w-full">
		if len(items) == 0 {
			<div id="registry-item-grid" class="flex py-40 justify-center items-center">
				<h3 class="text-4xl text-center">No Registry Items</h3>
			</div>
		} else {
			<div id="registry-item-grid" class="grid grid-cols-2 lg:grid-cols-6 gap-4 mb-8">
				for _,item := range items {
					@RegistryItem(item)
				}
			</div>
			@components.Pagination(urlPrefix, pages, page)
		}
	</div>
}

templ RegistryItem(item entities.RegistryItem) {
	<div
		id={ "registry-item-" + item.ID.String() }
		class="flex-col w-full flex px-6 lg:px-4  pt-8 lg:pt-2 pb-4 border rounded gap-4"
	>
		if item.Purchased {
			<p class="text-primary text-3xl lg:text-sm text-end">purchased</p>
		} else {
			<p class="invisible text-primary text-3xl lg:text-sm text-end">purchased</p>
		}
		<div class="flex flex-col pb-8 gap-4 h-full flex-1">
			<h3 class="font-light text-center text-4xl lg:text-lg">{ item.Name }</h3>
			<p class="font-light flex-1 text-grey-txt text-2xl leading-relaxed lg:text-xs">{ item.Description }</p>
		</div>
		<div class="flex gap-2 justify-center h-14 lg:h-8 items-center">
			<div
				class="flex-1 justify-center flex-col flex bg-off-grey h-full hover:bg-primary rounded text-white text-2xl lg:text-sm text-center font-light"
			>
				<a target="_blank" href="#">
					View Items
				</a>
			</div>
			if !item.Purchased {
				<div
					class="flex flex-col justify-center p-2 h-full w-14 bg-off-grey hover:bg-primary rounded"
					hx-post={ "/registry/purchased/" + item.ID.String() }
					hx-trigger="confirmed"
					hx-swap="outerHTML"
					hx-target={ fmt.Sprintf("#registry-item-%s", item.ID.String()) }
					onClick="Swal.fire({
  title: 'Confirm Purchase',
  text: 'Are you sure you would like to confirm this item as purchased',
  showCancelButton: true,
  confirmButtonText: 'Confirm',
  confirmButtonColor: '#355e3b',
}).then((result) => {
  if (result.isConfirmed) {
    htmx.trigger(this, 'confirmed');
    Swal.fire({
      title: 'Confirmed',
      timer: 2000,
      confirmButtonColor: '#355e3b',
      icon: 'success'
    });
  }
})"
					class="p-2 flex-1 bg-slate-800 hover:bg-primary rounded text-white text-2xl lg:text-sm text-center font-light"
				>
					<svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
						<g clip-path="url(#clip0_68_190)">
							<path
								d="M18 6H16C16 3.79 14.21 2 12 2C9.79 2 8 3.79 8 6H6C4.9 6 4 6.9 4 8V20C4 21.1 4.9 22 6 22H18C19.1 22 20 21.1 20 20V8C20 6.9 19.1 6 18 6ZM10 10C10 10.55 9.55 11 9 11C8.45 11 8 10.55 8 10V8H10V10ZM12 4C13.1 4 14 4.9 14 6H10C10 4.9 10.9 4 12 4ZM16 10C16 10.55 15.55 11 15 11C14.45 11 14 10.55 14 10V8H16V10Z"
								fill="#ffffff"
							></path>
						</g>
						<defs>
							<clipPath id="clip0_68_190">
								<rect width="24" height="24" fill="white"></rect>
							</clipPath>
						</defs>
					</svg>
				</div>
			}
		</div>
	</div>
}
